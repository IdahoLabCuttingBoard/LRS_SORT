@using LRS.Business
@model LRS.Mvc.Models.HomeModel
@{
    ViewBag.Title = "Home Page";
}

@section head{
    <script src="~/Scripts/Chart.min.js"></script>
    <style>
        .chart-legend {
            position: absolute;
            top: 50px;
            left: 0;
        }

        .chart-legend ul {
            list-style: none;
            width: 100%;
            margin: 10px auto 0;
        }

        .chart-legend li {
            text-indent: 35px;
            text-align: left;
            line-height: 24px;
            position: relative;
            cursor: pointer;
            cursor: hand;
        }

        .chart-legend div {
            width: 30px;
            height: 16px;
            position: absolute;
            left: 0;
            top: 3px;
            content: "";
            border: 1px black solid;
            margin-left: 0;
        }

        #ViewMode {
            height: 25px !important;
            line-height: 25px !important;
            padding: 0;
        }

        #ViewTime {
            height: 25px !important;
            line-height: 25px !important;
            padding: 0;
            text-align: center !important;
        }

        .lInProcess {background-color: #0a0aca;}
        .lUnderReview {background-color: #9400d3;}
        .lRejected {background-color: #e00f0f;}
        .lCompleted {background-color: #4ee00f;}
        .lCancelled {background-color: #000000;}

        .specialeffects:hover {
            color: black !important;
            background-color: darkcyan !important;
        }

        sup {
            font-size: .25em !important;
        }
    </style>
}

@Html.Hidden("FailMessage", TempData["FailMessage"])

<div class="col-md-12">
    <a href="@Url.Action("Index", "Artifact")" class="btn btn-primary specialeffects" style="margin: 0 0 15px 0; width: 100%; color: white; border-radius: 5px; background-color: darkslategray;"><i class="fa fa-plus" style="font-size: 1.5em;"><b> Add Artifact</b></i><br /><span>Create a New Document Review Artifact</span></a>
</div>

<div class="col-md-12">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="pull-left">
                <h3 class="panel-title">Artifacts</h3>
            </div>
            @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { id = "mainForm" }))
            {
                <div class="pull-left col-md-4">
                    @Html.BsDropDownListFor(x => x.ViewMode, BsHelper.GetEnumSelectList<ViewModeOptionEnum>(), new { onchange = "this.form.submit();" })
                </div>
                <div class="row text-nowrap pull-left ">
                    <div class="col-md-2">Show Last:</div>
                    <div class="col-md-2">@Html.BsInputMaskFor(m => m.ViewTime, InputMaskFormat.Integer, new { @placeholder = ""})</div>
                    <div class="col-md-2" style="padding-left: 0 !important;">Month(s)</div>
                    <div class="col-md-2"><button type="submit" class="btn btn-sm btn-primary"><i class="fa fa-recycle"> Refresh</i></button></div>
                </div>
            }
            <div class="pull-right">
                @*<a href="@Url.Action("Index", "Artifact")" class="btn btn-sm btn-primary"><i class="fa fa-plus"> Add Artifact</i></a>*@
            </div>
            <div class="clearfix"></div>
        </div>
        <div class="panel-body text-center">
            <div class="canvas-container" style="max-width: 300px; margin: 0 auto;">
                <canvas id="my-progress-chart" width="1" height="1"></canvas>
            </div>
            <div class="chart-legend">
                <ul>
                    <li><a style="color: black;" onclick="setViewMode('InProcess');"><div class="row lInProcess"></div>In Process (@Model.InProcess)</a></li>
                    <li><a style="color: black;" onclick="setViewMode('UnderReview');"><div class="row lUnderReview"></div>Under Review (@Model.UnderReview)</a></li>
                    <li><a style="color: black;" onclick="setViewMode('Complete');"><div class="row lCompleted"></div>Completed (@Model.Completed)</a></li>
                    <li><a style="color: black;" onclick="setViewMode('Cancelled');"><div class="row lCancelled"></div>Cancelled (@Model.Cancelled)</a></li>
                    <li><a style="color: black;" onclick="setViewMode('Rejected');"><div class="row lRejected"></div>Rejected (@Model.Rejected)</a></li>
                </ul>
            </div>
            <div class="panel-body">
                @(Html.Talon().Grid<MainObject>().Name("MainTable").Columns(c =>
                  {
                      c.Bound(x => x.MainId).Hidden();
                      if (Model.ViewMode == ViewModeOptionEnum.UnderReview)
                      {
                          c.Bound(x => x.GridFlags).Title("Flags").Width(30).Order(SortDir.desc);
                      }
                      c.Bound(x => x.DisplayTitle).Width(175).Title("STI Number and Rev");
                      c.Bound(x => x.Title).Title("Title");
                      c.Bound(x => x.OwnerName).Title("Creator");
                      c.Bound(x => x.ActivityDate).Format("MM/dd/yyyy hh:mm tt").Title("Last Activity").Order(SortDir.asc);
                      c.Bound(x => x.StatusDisplayName).Title("Status");
                      c.Bound(x => x.ReviewProgress).Title("Review Progress");
                      c.Bound(x => x.ReviewStatus).Title("Review Status");
                      c.Bound(x => x.GridButtons).Title(" ").Width(90).AlignCenter();
                  }).AjaxSource(Url.Action("HomGridData", "Home", new { viewMode = Model.ViewMode, viewTime = Model.ViewTime }))
                      )
            </div>
        </div>
    </div>
    <script>
        $(function () {
            var entryData = {
                labels: [
                    "In Process / Needs Data",
                    "Under Review",
                    "Rejected",
                    "Completed",
                    "Cancelled"
                ],
                datasets: [
                    {
                        data: [@Model.InProcess, @Model.UnderReview, @Model.Rejected, @Model.Completed, @Model.Cancelled],
                        backgroundColor: [
                            "#0a0aca",
                            "#9400d3",
                            "#e00f0f",
                            "#4ee00f",
                            "#000000"
                        ]
                    }
                ]
            };

            // And for a doughnut chart
            var entryChart = new Chart($("#my-progress-chart"),
                {
                    type: 'doughnut',
                    data: entryData,
                    options: {
                        animation: {
                            animateScale: false,
                            duration: 0
                        },
                        legend: {
                            display: false
                        },
                        onClick: function (event, item) {
                            if (item[0]) {
                                onChartClick(item[0]["_index"]);
                            }
                        }
                    }
                });

            function onChartClick(index) {
                switch (index) {
                case 0: // In Process 
                    setViewMode('InProcess');
                    break;
                case 1: //  Under Review
                    setViewMode('UnderReview');
                    break;
                case 2: // Rejected
                    setViewMode('Rejected');
                    break;
                case 3: // Completed
                    setViewMode('Complete');
                    break;
                case 4: // Cancelled
                    setViewMode('Cancelled');
                    break;
                }
            }


        });
    </script>
</div>
<div class="clearfix"></div>

@if (Model.Reviews != null && Model.Reviews.Count > 0)
{
    <div class="col-lg-12">
        <div class="panel panel-warning">
            <div class="panel-heading">
                <h3 class="panel-title">Artifacts To Review </h3>
            </div>
            <div class="panel-body text-center">
                <div class="panel-body">
                    @(Html.Talon().Grid(Model.Reviews).Name("ReviewTable").Columns(c =>
                    {
                        c.Bound(x => x.MainId).Hidden();
                        c.Bound(x => x.GridFlags).Title("Flags").Width(30).Order(SortDir.desc);
                        c.Bound(x => x.DisplayTitle).Width(175).Title("STI Number and Rev");
                        c.Bound(x => x.Title).Title("Title");
                        c.Bound(x => x.OwnerName).Title("Owner");
                        c.Bound(x => x.StatusDisplayName).Title("Status");
                        c.Bound(x => x.ReviewProgress).Title("Review Progress");
                        c.Bound(x => x.ReviewStatus).Title("Review Status");
                        if (Model.UserIsGenericReviewer)
                        {
                            c.Bound(x => x.ReviewerClaim).Title("Review Claimed By");
                        }
                        c.Bound(x => x.ReviewGridButtons).Title(" ").Width(90).AlignCenter();
                    }))
                </div>
            </div>
        </div>
    </div>
}

<script>
    function setViewMode(mode) {
        $('#ViewMode').val(mode).trigger("change");
    }
</script>