<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
    
  </configSections>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="elmah.mvc.disableHandler" value="false" />
    <add key="elmah.mvc.disableHandleErrorFilter" value="false" />
    <add key="elmah.mvc.requiresAuthentication" value="false" />
    <add key="elmah.mvc.IgnoreDefaultRoute" value="false" />
    <add key="elmah.mvc.allowedRoles" value="*" />
    <add key="elmah.mvc.allowedUsers" value="*" />
    <!-- Configure ELMAH.MVC access route. Note that you should probably change this to something else. 
         This is to add a little security through obscurity. hackers can't hack your elmah page if they 
         don't know where it is.
         Note: If you change this value (Which you should) don't forget to also change the route in RouteConfig.cs. -->
    <add key="elmah.mvc.route" value="elmah" />
    <add key="OwnerEmail" value="Owner@YourSite.com" /><!-- This is the email address of who owns the application (send in the emails) -->
    <add key="LoiessUrl" value="https://YourLoiessSite.com" /><!-- This is the site used to verify and update the LDRD Tracking number for Laboratory Directed Research and Development funding sources under the funding section. If you wish to use LDRD as a Funding Source, you will need to work with the code behind this to implement your own interface.  -->
    <add key="LrsUrl" value="https://YourLrsSite.com/" /><!-- URL for the link to LRS -->
    <add key="SortUrl" value="https://YourSortSite.com/" /><!-- URL for the link back to this system (Used in Emails) -->
    <add key="OstiUrl" value="https://YourOstiSite.com/" /><!-- URL for OSTI communication -->
    <add key="OstiFtpSite" value="{OSTI FTP Site}" /><!-- OSTI's FTP site name user to upload documents to OSTI that are private -->
    <add key="OstiFtpPort" value="{OSTI FTP Port}" /><!-- Port that OSTI's FTP uses  -->
    <add key="OstiFtpUsername" value="{OSTI FTP User Name}" /><!-- User name used to login to OSTI's FTP site -->
    <add key="OstiFtpPassword" value="{OSTI FTP Password}" /><!-- Password used to login to OSTI's FTP site -->
    <add key="GemBoxLicense" value="{GemBox License}" /><!-- Your license used in the 3rd party tool called GemBox -->
    <add key="SiteCode" value="{Your Site Code}" /> <!-- Code used for your site name -->
    <add key="DoeContractNumber" value="YourFundingContractNumber" /> <!-- This is the default Contract Number that is used for the Funding -->
    <add key="OriginatingResearchOrg" value="{Your Originating Research Organization Name}" /><!-- Name of your Originating Organization used at OSTI -->
    <add key="DigitalLibraryUrl" value="https://YourDigitalLibrarySite.com/" /><!-- URL of your external digital library, used to store document sent to OSTI that where marked public. -->
    <add key="ReleaseOfficial" value="{Release Officer Name}" /><!-- Name of the Release officer.  Used in the about. -->
    <add key="ReleaseOfficialEmail" value="{Release Officer Email}" /><!-- Email of the Release officer. Used in the about. -->
    <add key="ReleaseOfficialPhone" value="{Release Officer Phone}" /><!-- Phone Number of the Release Officer. Used in the about. -->
    <add key="EmailServer" value="YourMailHost.com" /><!-- This is your outgoing email server -->
    <add key="OwnerEmail" value="Owner@YourSite.com" /><!-- This is the email address of who owns the application (send in the emails) -->
    <add key="DeveloperEmail" value="Devloper@YourSite.com" /><!-- This is the email address of the developer. used in the emails instead of the OwnerEmail when running locally. -->
    <add key="FromEmailAddress" value="SORT@YourSite.com" /><!-- This is the from used in the email. -->
    <add key="ida:ADFSMetadata" value="https://YourFederationAuthSite.com/" /><!-- The application is currently setup to used Federation Authorization.  This is the link to your Federation Authorization web site. -->
    <add key="ida:Wtrealm" value="https://YourRealm.com/_trust/" />
    <add key="ida:ADFSReply" value="https://localhost:44347" />
  </appSettings>
  <connectionStrings>
    <add name="DefaultConnection" connectionString="Data Source={SortDataSource};Initial Catalog={SortDatabase};Trusted_Connection=True" providerName="System.Data.SqlClient" />
    <add name="EmployeeConnection" connectionString="Data Source={EmployeeDataSource};Initial Catalog={EmployeeDatabase};Trusted_Connection=True" providerName="System.Data.SqlClient" />
    <add name="ELMAH" connectionString="Data Source={ElmahDataSource};Initial Catalog={ElmahDatabase};Trusted_Connection=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.net>
    <defaultProxy enabled="true" useDefaultCredentials="true">
    </defaultProxy>
  </system.net>
  <system.web>
    <roleManager defaultProvider="WindowsProvider" enabled="true" cacheRolesInCookie="false">
      <providers>
        <add name="WindowsProvider" applicationName="Sort.Mvc" type="Sort.Mvc.Security.WindowsTokenCacheRoleProvider" />
      </providers>
    </roleManager>
    <caching>
      <outputCacheSettings>
        <!-- outputCacheSettings - Controls how controller actions cache content in one central location. 
                                   You can also modify the web configuration file without recompiling your application. -->
        <outputCacheProfiles>
          <!-- Cache the robots.txt route for a day. -->
          <add name="RobotsText" duration="86400" location="Any" varyByParam="none" />

          <!-- Cache the 400 Bad Request route for a day. -->
          <add name="BadRequest" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 403 Forbidden route for a day. -->
          <add name="Forbidden" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 405 Method Not Allowed route for a day. -->
          <add name="MethodNotAllowed" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 404 Not Found route for a day. -->
          <add name="NotFound" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 401 Unauthorized route for a day. -->
          <add name="Unauthorized" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 500 Internal Server Error route for a day. -->
          <add name="InternalServerError" duration="86400" location="Any" varyByParam="none" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
    <compilation debug="true" enablePrefetchOptimization="true" targetFramework="4.5.2" />
    <customErrors mode="Off" />
    <!-- httpOnlyCookies - Ensure that external script cannot access the cookie. -->
    <!-- requireSSL - Ensure that the cookie can only be transported over SSL. -->
    <httpCookies httpOnlyCookies="true" requireSSL="false" />
    <!-- enableVersionHeader - Remove the ASP.NET version number from the response headers. Added security through obscurity. -->
    <!-- executionTimeout - Specifies the maximum number of seconds that a request is allowed to execute before being automatically shut down by ASP.NET. 
                            This time-out applies only if the debug attribute in the compilation element is False. To help to prevent shutting down the 
                            application while you are debugging, do not set this time-out to a large value. The default is 110 seconds and has 
                            been reduced to 30 seconds. -->
    <!-- maxQueryStringLength - The maximum length of the query string, in number of characters. The default is 2048.  If the length of a query string 
                                exceeds the size limit, ASP.NET returns an HTTP 400 (Bad Request) status code. This setting is for ASP.NET while the 
                                requestLimits maxQueryString setting is for IIS, you need to set both to the same value. -->
    <!-- maxRequestLength - Specifies the limit for the input stream buffering threshold, in KB. This limit can be used to prevent denial of service 
                            attacks that are caused, for example, by users posting large files to the server. The default is 4096 (4 MB) and has been 
                            reduced to 1024 (1 MB). This setting is for ASP.NET while the requestLimits maxAllowedContentLength setting is for IIS, 
                            you need to set both to the same value or the smaller number wins (See http://stackoverflow.com/questions/6327452/which-gets-priority-maxrequestlength-or-maxallowedcontentlength). -->
    <!-- maxUrlLength - The maximum length of the URL, in number of characters. The default is 260. If the length of the request URL (which is the value 
                        of the Path property https://msdn.microsoft.com/en-us/library/vstudio/system.web.httprequest.path(v=vs.100).aspx) exceeds the 
                        configured size limit, ASP.NET returns an HTTP 400 (Bad Request) status code. This setting is for ASP.NET while the requestLimits 
                        maxUrl setting is for IIS, you need to set both to the same value. -->
    <httpRuntime targetFramework="4.5.2" executionTimeout="1600" maxQueryStringLength="2048" maxRequestLength="2147483647" maxUrlLength="260" requestLengthDiskThreshold="2147483647" />
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
    </httpModules>
    <!-- machineKey - If your this site is deployed to a server cluster or you are using shared hosting, generate a 
                      machine key from IIS and enter it below. The machine key is used to generate MVC anti-forgery tokens
                      among other things (See http://blogs.msdn.com/b/amb/archive/2012/07/31/easiest-way-to-generate-machinekey.aspx)
                      Also don't forget to encrypt your machine key (See https://msdn.microsoft.com/en-us/library/dtkwfdky.aspx). -->
    <!--<machineKey decryptionKey="[YOUR DECRYPTION KEY GOES HERE]" 
                validationKey="[YOUR VALIDATION KEY GOES HERE]"/>-->
    <!-- session - Sessions are created and used whenever you use the TempData property in your controllers or actions. They are generally discouraged due to performance concerns but it's up to you if you need it. -->
    <!-- cookieName - Sets the name of the ASP.NET session cookie (Defaults to 'ASP.NET_SessionId'). -->
    <!-- timeout - Specifies the number of minutes a session can be idle before it is abandoned. The default is 20 minutes. This should be kept as low as 
                   possible. The longer this time period is, the more time a potential attacker has to make a man-in-the-middle attack and hijack the users 
                   session. If you are using SSL/TLS, this is less of a concern. -->
    <sessionState cookieName="s" timeout="20" />
    <!-- trace - Enable tracing. Navigate to /trace.axd to view detailed request/response information (See https://msdn.microsoft.com/library/1y89ed7z%28VS.71%29.aspx). -->
    <trace enabled="true" />
  </system.web>
  <system.webServer>
    <!-- Stop IIS from doing courtesy redirects used to redirect a link to a directory without to a slash 
         to one with a slash e.g. /Content redirects to /Content/. This gives a clue to hackers as to the location
         of directories. See http://www.iis.net/configreference/system.webserver/defaultdocument and
         http://www.troyhunt.com/2014/09/solving-tyranny-of-http-403-responses.html 
         Note: This will stop IIS from returning the default document when navigating to a folder.
               e.g. navigating to /Folder/ which contains index.html will not return /Folder/index.html. 
               This should not be a problem as we are using ASP.NET MVC controllers and actions. -->
    <defaultDocument enabled="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
      
    </modules>
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="2147483647" />
      </requestFiltering>
    </security>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <!-- By default any URL with a file extension is assumed to be a static file and MVC routing is not used. 
           Here we enable MVC routing for robots.txt and sitemap.xml files. -->
      <add name="RobotsText" path="robots.txt" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="SitemapXml" path="sitemap.xml" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <!-- httpCompression - GZip compress static file content. Overrides the server default which only compresses static files over 2700 bytes.
         See http://zoompf.com/blog/2012/02/lose-the-wait-http-compression and
         http://www.iis.net/configreference/system.webserver/httpcompression -->
    <!-- minFileSizeForComp - The minimum file size to compress. -->
    <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" minFileSizeForComp="1024">
      <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll" />
      <dynamicTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/x-javascript" enabled="true" />

        <!-- Compress XML files -->
        <add mimeType="application/xml" enabled="true" />
        <!-- Compress JavaScript files -->
        <add mimeType="application/javascript" enabled="true" />
        <!-- Compress JSON files -->
        <add mimeType="application/json" enabled="true" />
        <!-- Compress SVG files -->
        <add mimeType="image/svg+xml" enabled="true" />
        <!-- Compress RSS feeds -->
        <add mimeType="application/rss+xml" enabled="true" />
        <!-- Compress Atom feeds -->
        <add mimeType="application/atom+xml" enabled="true" />

        <add mimeType="*/*" enabled="false" />
      </dynamicTypes>
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/x-javascript" enabled="true" />
        <add mimeType="application/atom+xml" enabled="true" />
        <add mimeType="application/xaml+xml" enabled="true" />

        <!-- Compress ICO icon files (Note that most .ico files are uncompressed but there are some that can contain PNG compressed images. If you are doing this, remove this line). -->
        <add mimeType="image/x-icon" enabled="true" />
        <!-- Compress XML files -->
        <add mimeType="application/xml" enabled="true" />
        <add mimeType="application/xml; charset=UTF-8" enabled="true" />
        <!-- Compress JavaScript files -->
        <add mimeType="application/javascript" enabled="true" />
        <!-- Compress JSON files -->
        <add mimeType="application/json" enabled="true" />
        <!-- Compress SVG files -->
        <add mimeType="image/svg+xml" enabled="true" />
        <!-- Compress EOT font files -->
        <add mimeType="application/vnd.ms-fontobject" enabled="true" />
        <!-- Compress TTF font files - application/font-ttf will probably be the new correct MIME type. IIS still uses application/x-font-ttf. -->
        <!--<add mimeType="application/font-ttf" enabled="true" />-->
        <add mimeType="application/x-font-ttf" enabled="true" />
        <!-- Compress OTF font files - application/font-opentype will probably be the new correct MIME type. IIS still uses font/otf. -->
        <!--<add mimeType="application/font-opentype" enabled="true" />-->
        <add mimeType="font/otf" enabled="true" />
        <!-- Compress RSS feeds -->
        <add mimeType="application/rss+xml" enabled="true" />
        <add mimeType="application/rss+xml; charset=UTF-8" enabled="true" />

        <add mimeType="*/*" enabled="false" />
      </staticTypes>
    </httpCompression>
    <httpProtocol>
      <customHeaders>
        <!-- X-Powered-By - Remove the HTTP header for added security and a slight performance increase. -->
        <remove name="X-Powered-By" />
        
        <!-- X-UA-Compatible - Ensure that IE and Chrome frame is using the latest rendering mode. Alternatively, use the HTML meta tag X-UA-Compatible "IE=edge" -->
        <add name="X-UA-Compatible" value="IE=edge,chrome=1" />

        <remove name="X-Frame-Options" />
        <add name="X-Frame-Options" value="DENY" />
      </customHeaders>
    </httpProtocol>
    <staticContent>
      <remove fileExtension=".woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
    </staticContent>
    <validation validateIntegratedModeConfiguration="false" />
    <!-- Enable gzip and deflate HTTP compression. See http://www.iis.net/configreference/system.webserver/urlcompression
         doDynamicCompression - enables or disables dynamic content compression at the site, application, or folder level.
         doStaticCompression - enables or disables static content compression at the site, application, or folder level. 
         dynamicCompressionBeforeCache - specifies whether IIS will dynamically compress content that has not been cached. 
                                         When the dynamicCompressionBeforeCache attribute is true, IIS dynamically compresses 
                                         the response the first time a request is made and queues the content for compression. 
                                         Subsequent requests are served dynamically until the compressed response has been 
                                         added to the cache directory. Once the compressed response is added to the cache 
                                         directory, the cached response is sent to clients for subsequent requests. When 
                                         dynamicCompressionBeforeCache is false, IIS returns the uncompressed response until 
                                         the compressed response has been added to the cache directory. 
                                         Note: This is set to false in Debug mode to enable Browser Link to work when debugging.
                                         The value is set to true in Release mode (See web.Release.config).-->
    <urlCompression doDynamicCompression="true" doStaticCompression="true" dynamicCompressionBeforeCache="false" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EPPlus" publicKeyToken="ea159fdaa78159a1" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.4.0" newVersion="5.2.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Protocols.WsFederation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.1.0" newVersion="5.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Tokens" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.1.0" newVersion="5.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Protocols" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.1.0" newVersion="5.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Tokens.Saml" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.1.0" newVersion="5.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IdentityModel.Tokens.Jwt" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.1.0" newVersion="5.2.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
 </configuration>
